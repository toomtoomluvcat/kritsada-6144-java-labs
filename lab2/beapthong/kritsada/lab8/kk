package beapthong.kritsada.lab8;

import java.awt.*;
import javax.swing.*;

public class MobileDeviceV2 extends MobileDeviceV1 {

    // Scroll pane for the features text area
    protected JScrollPane featuresScrollPane;
    
    // Labels for additional fields
    protected JLabel operatingLabel, featuresLabel;
    
    // Panel for additional information
    protected JPanel extraPanel;
    
    // ComboBox for selecting the operating system
    protected JComboBox<String> operatingComboBox;
    
    // TextArea for entering device features
    protected JTextArea featuresTextArea;

    // Constructor to set the window title
    public MobileDeviceV2(String title) {
        super(title);
    }

    // Method to create and display the GUI
    public static void createAndShowGUI() {
        MobileDeviceV2 mdv2 = new MobileDeviceV2("Mobile Device V2");
        mdv2.addComponents();
        mdv2.setFrameFeatures();
    }

    // Main method to run the application
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> createAndShowGUI());
    }

    // Override the method to add components to the UI
    @Override
    public void addComponents() {
        addButtonUnderComponents(); // Add buttons
        addInformationInput();      // Add basic input fields
        addMoreInformation();       // Add additional fields (OS & Features)
    }

    // Method to add more fields (Operating System & Features)
    protected void addMoreInformation() {

        // Create a new main panel with BorderLayout
        mainPanel = new JPanel(new BorderLayout());

        // Create a label and a non-editable combo box for OS selection
        operatingLabel = createLabel("Operating System:");
        String[] options = {"Android", "iOS", "Windows", "Others"};
        operatingComboBox = new JComboBox<>(options);
        operatingComboBox.setSelectedIndex(0); // Set default to "Android"
        operatingComboBox.setEditable(false);  // Ensure it's non-editable

        // Create a label and a text area with scroll support for features
        featuresLabel = createLabel("Features:");
        featuresTextArea = new JTextArea(3, 25);
        featuresTextArea.setLineWrap(true);
        featuresTextArea.setWrapStyleWord(true);
        featuresScrollPane = new JScrollPane(featuresTextArea);
        featuresScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        featuresScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);

        // Create a panel with GridLayout to organize components
        extraPanel = createPanelWithGridLayout(2, 2);

        // Add components to the extra panel
        extraPanel.add(operatingLabel);
        extraPanel.add(operatingComboBox);
        extraPanel.add(featuresLabel);
        extraPanel.add(featuresScrollPane);

        // Add the extra panel to the main panel at the center
        mainPanel.add(extraPanel, BorderLayout.CENTER);
        
        // Add the main panel to the frame
        add(mainPanel, BorderLayout.CENTER);
    }
}
